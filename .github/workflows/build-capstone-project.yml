name: build-capstone-project
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
  build-capstone-web-api:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    - name: capstone.web.api Install dependencies
      working-directory: './capstone.web.api'
      run: dotnet restore
    - name: capstone.web.api Build
      working-directory: './capstone.web.api'
      run: dotnet build --no-restore --configuration Release
    - name: capstone.web.api Create tool manifest
      working-directory: './capstone.web.api'
      run: dotnet new tool-manifest
    - name: capstone.web.api Install dotnet-ef tools
      working-directory: './capstone.web.api'
      run: dotnet tool install dotnet-ef
    - name: capstone.web.api Generate Database Migration Script
      working-directory: './capstone.web.api'
      run: dotnet ef migrations script --idempotent --context AppDbContext --configuration Release --output ${{env.DOTNET_ROOT}}/capstone.web.db/capstone.web.db.sql --no-build
  build-capstone-web:
    runs-on: ubuntu-latest
    steps:
    - name: capstone.web Checkout repository
      uses: actions/checkout@v4
    - name: capstone.web Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: 'capstone.web'
    - name: capstone.web Install project with a clean slate 
      working-directory: './capstone.web'
      run: npm ci
    - name: capstone.web Build project
      working-directory: './capstone.web'
      run: npm run build --if-present
